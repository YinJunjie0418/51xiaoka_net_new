{extend name="base" /}
{block name="body"}
<div class="layui-card">
    <blockquote class='layui-elem-quote' style='border-left-color: #f60;font-size:14px;color:#f60'>在输入框直接修改，移开光标执行保存，可刷新页面检查</blockquote>
    <div class="layui-card-header">
        <div class="layui-btn-group">
            <a href="{:url('/SellCard/savesell')}" class="layui-btn layui-btn-danger ajax-iframe" data-width="750px" data-height="600px"><i class="fa fa-plus-circle"></i> 添加</a>
            <span id="mbutton">
                <button class="layui-btn {neq name="id" value="0"}layui-btn-primary{/neq}" type="button" id="moneyClick" lay-type="0" >全部</button>
                {volist name="res" id="v"}
                <button class="layui-btn {neq name="id" value="$v.id"}layui-btn-primary{/neq}" type="button" id="moneyClick" lay-type="{$v['id']}" >{$v['title']}</button>
                {/volist}
            </span>
        </div>
    </div>
    
    <table id="tableList" lay-filter="tableList"></table>
    <!-- 表格操作列 -->
    </script>
     <script type="text/html" id="edit">
         <button type="button" class="layui-btn layui-btn-normal" lay-event="edit">编辑</button>
         <button type="button" class="layui-btn ajax-delete" href="{:url('/SellCard/delcard')}?id={{d.id}}" >删除</button>

     </script>

    <script type="text/html" id="status">
        <input type="checkbox" name="status" lay-skin="switch" lay-filter="*" lay-text="开启|维护" data-url="{:url('/SellCard/edit')}?id={{d.id}}" {{d.status==1?'checked':''}}>
    </script>

    <script type="text/html" id="batch">
        <input type="checkbox" name="batch" lay-skin="switch" lay-filter="*" lay-text="批量|单张" data-url="{:url('/SellCard/edit')}?id={{d.id}}" {{d.batch==1?'checked':''}}>
    </script>
	
	<script type="text/html" id="operatorfl">
        <input type="text" name="geway" value="{{d.geway}}" autocomplete="off" class="layui-input ajax-update" data-url="{:url('/SellCard/edit')}?id={{d.id}}">
    </script>

    <script type="text/html" id="type">
        <input type="text" name="type" value="{{d.type}}" autocomplete="off" class="layui-input ajax-update" data-url="{:url('/SellCard/edit')}?id={{d.id}}">
    </script>
	
	<script type="text/html" id="rate">
        <input type="text" name="rate" value="{{d.rate}}" autocomplete="off" class="layui-input ajax-update" data-url="{:url('/SellCard/edit')}?id={{d.id}}">
    </script>
    <script type="text/html" id="maxtopup">
        <input type="text" name="maxtopup" value="{{d.maxtopup}}" autocomplete="off" class="layui-input ajax-update" data-url="{:url('/SellCard/edit')}?id={{d.id}}&way={{d.geway}}">
    </script>
    <script type="text/html" id="maxtime">
        <input type="text" name="maxtime" value="{{d.maxtime}}" autocomplete="off" class="layui-input ajax-update" data-url="{:url('/SellCard/edit')}?id={{d.id}}&way={{d.geway}}">
    </script>
</div>
{/block}

{block name="js"}
<script>
    layui.use(['layer', 'form', 'table', 'util', 'dropdown'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var util = layui.util;
        var admin = layui.admin;
        var dropdown = layui.dropdown;
		var insTb = table.render({
            elem: '#tableList',
            url: "{:url('/SellCard/index')}",
            where:{},
            page: true,
            limit:15,
            limits:[15,30,45,60,75,90],
            cellMinWidth: 100,
            cols: [[
                {type:'numbers',title:'#'},
                {field: 'name',align: 'left', sort: true, title: '名称',width:200},
                {field:'geway', align: 'center',templet:"#operatorfl", title: '识别代码',width:140},
				{field: 'typeas', align: 'center', title: '充值通道',minWidth:280},
                {field: 'operid',align: 'center',title:'对冲通道',minWidth: 80},
                {field: 'type',align: 'center',templet:"#type",title:'上游通道代码',minWidth: 80},
                {field: 'rate',align: 'center',templet:'#rate',title:'充值费率',minWidth: 80},
                {field: 'maxtopup',align: 'center',templet:'#maxtopup',title:'最大失败次数',minWidth: 120},
                {field: 'status',align: 'center',templet:'#status',title:'状态',minWidth: 80},
                {align: 'center',  title: '操作',templet:'#edit',width:280},
            ]],
            parseData: function(res){ //res 即为原始返回的数据
                return {
                  "code": res.code, //解析接口状态
                  "msg": res.msg, //解析提示文本
                  "count": res.data.total, //解析数据长度
                  "data": res.data.data //解析数据列表
                };
            }
        });
		$("#mbutton").on("click","#moneyClick",function(){
		    var e=$(this);
			e.siblings().addClass("layui-btn-primary");
			e.removeClass("layui-btn-primary");
            var name=e.attr('lay-type');
                 insTb.reload({
					page:{curr:1},
                    where:{
						 cid:name
                     }
                 });
		});
        table.on('tool(tableList)', function(obj){ //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
            var data = obj.data //获得当前行数据
                ,layEvent = obj.event; //获得 lay-event 对应的值
            switch(layEvent){
                case "editapi":
                    var one=openUrl("添加API【"+data.name+"】",'600px','260px',"{:url('/SellCard/editapi')}?id="+data.id);
                    break;
                case "edit":
                    var one=openUrl("编辑",'880px','600px',"{:url('/SellCard/savesell')}?id="+data.id);
                    break;
            }
            function openUrl(title,width,height,url){
                var index = layer.open({
                    title: title,
                    type: 2,
                    shadeClose:true,
                    area: [width, height],
                    content: url,
                })
                return index;
            }
        });
       
    });

</script>
{/block}